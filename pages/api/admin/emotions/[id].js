import { getServerSession } from "next-auth";
import { authOptions } from "../../auth/[...nextauth]";

// Donn√©es fictives pour les √©motions (√† stocker dans une base de donn√©es dans une version future)
// Nous d√©finissons les √©motions ici plut√¥t que d'essayer de les importer
const emotions = [
  { id: '1', name: 'Joie', emoji: 'üòä', createdAt: new Date() },
  { id: '2', name: 'Tristesse', emoji: 'üò¢', createdAt: new Date() },
  { id: '3', name: 'Col√®re', emoji: 'üò°', createdAt: new Date() },
  { id: '4', name: 'Peur', emoji: 'üò®', createdAt: new Date() },
  { id: '5', name: 'Surprise', emoji: 'üò≤', createdAt: new Date() },
  { id: '6', name: 'D√©go√ªt', emoji: 'ü§¢', createdAt: new Date() },
];

export default async function handler(req, res) {
  const session = await getServerSession(req, res, authOptions);
  
  if (!session || session.user.role !== 'admin') {
    return res.status(403).json({ message: "Acc√®s non autoris√©" });
  }

  const { id } = req.query;

  // Gestion des requ√™tes DELETE
  if (req.method === 'DELETE') {
    try {
      // Trouver l'index de l'√©motion √† supprimer
      const index = emotions.findIndex(emotion => emotion.id === id);
      
      if (index === -1) {
        return res.status(404).json({ message: "√âmotion non trouv√©e" });
      }
      
      // Supprimer l'√©motion du tableau
      emotions.splice(index, 1);
      
      return res.status(200).json({ message: "√âmotion supprim√©e avec succ√®s" });
    } catch (error) {
      console.error("Erreur:", error);
      return res.status(500).json({ message: "Erreur serveur" });
    }
  }

  return res.status(405).json({ message: "M√©thode non autoris√©e" });
}